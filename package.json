{
    "name": "heiot",
    "version": "0.1.0",
    "private": true,
    "scripts": {
        "serve": "vue-cli-service serve",
        "build": "vue-cli-service build",
        "lint": "vue-cli-service lint",
        "test:unit": "vue-cli-service test:unit",
        "bamboo": "npm run test:unit",
        "bamboo:coverage": "npm run bamboo || true && bamboo-jest-coverage-parser",
        "tslint:fix": "tslint --project tsconfig.json --fix",
        "prettier": "prettier --write \"{,!(node_modules|dist|build|coverage)/**/}*.{js,jsx,ts,tsx,json}\"",
        "pre-commit": "npm run tslint:fix && npm run lint && npm run prettier && npm run test:unit && npm run build",
        "docker-build": "cd .. && cd ise_2019_dev_infra && sh dev.sh build",
        "docker-up": "cd .. && cd ise_2019_dev_infra && sh dev.sh up -d && docker exec -it frontend /bin/bash",
        "docker-test": "cd .. && cd ise_2019_dev_infra && sh dev.sh up -d && docker exec frontend npm run test:unit",
        "docker-bamboo": "cd .. && cd ise_2019_dev_infra && sh dev.sh up -d && docker exec frontend npm run bamboo",
        "docker-attach": "docker exec -it frontend /bin/bash",
        "docker-down": "cd .. && cd ise_2019_dev_infra && sh dev.sh down"
    },
    "husky": {
        "hooks": {
            "pre-commit": "pretty-quick --staged && npm run tslint:fix && npm run lint && (npm run docker-test || npm run test:unit)",
            "pre-push": "npm run build"
        }
    },
    "dependencies": {
        "@types/chart.js": "^2.9.14",
        "axios": "^0.21.1",
        "chart.js": "^2.9.3",
        "core-js": "^2.6.11",
        "element-ui": "^2.13.0",
        "register-service-worker": "^1.6.2",
        "vue": "^2.6.11",
        "vue-class-component": "^7.2.3",
        "vue-multiselect": "^2.1.6",
        "vue-property-decorator": "^8.4.0",
        "vue-router": "^3.1.6",
        "vuex": "^3.1.2",
        "webpack": "^4.42.0"
    },
    "devDependencies": {
        "@types/jest": "^24.9.1",
        "@vue/cli-plugin-babel": "^3.12.1",
        "@vue/cli-plugin-pwa": "^3.12.1",
        "@vue/cli-plugin-typescript": "^3.12.1",
        "@vue/cli-plugin-unit-jest": "^3.11.0",
        "@vue/cli-service": "^3.12.1",
        "@vue/test-utils": "^1.0.0-beta.31",
        "babel-core": "^7.0.0-bridge.0",
        "bamboo-mocha-jest-code-coverage": "^1.0.0",
        "husky": "^3.1.0",
        "jest-bamboo-reporter": "^1.2.1",
        "node-sass": "^4.13.1",
        "prettier": "^1.19.1",
        "pretty-quick": "^1.11.1",
        "sass-loader": "^7.1.0",
        "ts-jest": "^24.3.0",
        "tslint": "^5.20.1",
        "tslint-config-prettier": "^1.18.0",
        "tslint-plugin-prettier": "^2.1.0",
        "typescript": "^3.8.3",
        "vue-template-compiler": "^2.6.11"
    },
    "jest": {
        "moduleFileExtensions": [
            "js",
            "jsx",
            "json",
            "vue",
            "ts",
            "tsx"
        ],
        "testPathIgnorePatterns": [
            "src/views/",
            "src/typings/",
            "src/utils/",
            "src/App.vue",
            "src/main.ts",
            "src/router.ts",
            "src/registerServiceWorker.ts",
            "src/api/"
        ],
        "testResultsProcessor": "jest-bamboo-reporter",
        "transform": {
            "^.+\\.vue$": "vue-jest",
            ".+\\.(css|styl|less|sass|scss|svg|png|jpg|ttf|woff|woff2)$": "jest-transform-stub",
            "^.+\\.tsx?$": "ts-jest"
        },
        "transformIgnorePatterns": [
            "/node_modules/"
        ],
        "moduleNameMapper": {
            "^@/(.*)$": "<rootDir>/src/$1"
        },
        "snapshotSerializers": [
            "jest-serializer-vue"
        ],
        "testMatch": [
            "**/tests/unit/**/*.spec.(js|jsx|ts|tsx)|**/__tests__/*.(js|jsx|ts|tsx)"
        ],
        "testURL": "http://localhost/",
        "watchPlugins": [
            "jest-watch-typeahead/filename",
            "jest-watch-typeahead/testname"
        ],
        "globals": {
            "ts-jest": {
                "babelConfig": true
            }
        },
        "collectCoverage": true,
        "collectCoverageFrom": [
            "**/*.{ts,vue}",
            "!**/node_modules/**",
            "!**src/views/**",
            "!**src/typings/**",
            "!**src/utils/**",
            "!**tests/**",
            "!**src/App.vue",
            "!**src/main.ts",
            "!**src/router.ts",
            "!**src/registerServiceWorker.ts",
            "!**src/api/**"
        ]
    }
}
